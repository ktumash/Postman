{
	"info": {
		"_postman_id": "e26c6dda-6725-4a53-8aa5-23949a1252f1",
		"name": "HW_2",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "24167949"
	},
	"item": [
		{
			"name": "first",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// 1.Отправить запрос\r",
							"// 2.Статус код 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var resp_text=pm.response.text()\r",
							"console.log(resp_text)\r",
							"\r",
							"pm.test(\"check_body_responce_string\", function () {\r",
							"    pm.expect(resp_text).to.eql('This is the first responce from server!ss');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/first",
					"host": [
						"{{url}}"
					],
					"path": [
						"first"
					]
				}
			},
			"response": []
		},
		{
			"name": "user_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// 1.Отправить запрос\r",
							"// 2.Статус код 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"// 3.Спарсить response body в json\r",
							"var jsonData = pm.response.json()\r",
							"\r",
							"// 4. Проверить, что name в ответе равно name s request (name вбить руками.)\r",
							"var resp_name=jsonData.name\r",
							"console.log('resp_name='+resp_name)\r",
							"\r",
							"pm.test(\"Req_Resp_Name_check\", function () {\r",
							"    pm.expect(resp_name).to.eql(\"Kate\");\r",
							"});\r",
							"\r",
							"// 5. Проверить, что age в ответе равно age s request (age вбить руками.)\r",
							"var resp_age=jsonData.age\r",
							"console.log('resp_age='+resp_age)\r",
							"\r",
							"pm.test(\"Req_Resp_AGE_check\", function () {\r",
							"    pm.expect(resp_age).to.eql(\"33\");\r",
							"});\r",
							"\r",
							"// 6. Проверить, что salary в ответе равно salary s request (salary вбить руками.)\r",
							"var resp_salary=jsonData.salary\r",
							"console.log('resp_salary='+resp_salary)\r",
							"\r",
							"pm.test(\"Req_Resp_SALARY_check\", function () {\r",
							"   pm.expect(resp_salary).to.eql(1550);\r",
							"});\r",
							"\r",
							"    // 7. Спарсить request\r",
							"var req =request.data\r",
							"\r",
							"// 8. Проверить, что name в ответе равно name s request (name забрать из request.)\r",
							"var req_name=req.name\r",
							"console.log('req_name='+req_name)\r",
							"\r",
							"pm.test(\"Req_Resp_Name_check\", function () {\r",
							"    pm.expect(resp_name).to.eql(req_name);\r",
							"});\r",
							"\r",
							"// 9.Проверить, что age в ответе равно age s request (age забрать из request.)\r",
							"\r",
							"var req_age=req.age\r",
							"console.log('req_age='+req_age)\r",
							"pm.test(\"Req_Resp_AGE_check\", function () {\r",
							"    pm.expect(resp_age).to.eql(req_age);\r",
							"});\r",
							"\r",
							"//10. Проверить, что salary в ответе равно salary s request (salary забрать из request.)\r",
							"var req_salary=req.salary\r",
							"console.log('req_salary='+req_salary)\r",
							"\r",
							"pm.test(\"Req_Resp_SALARY_check\", function () {\r",
							"    pm.expect(resp_salary).to.eql(+req_salary);\r",
							"});\r",
							"\r",
							"//11. Вывести в консоль параметр family из response.\r",
							"var resp_family = jsonData.family\r",
							"console.log(\"resp_family =\",resp_family);\r",
							"\r",
							"//12. Проверить что u_salary_1_5_year в ответе равно salary*4 (salary забрать из request)\r",
							"var req =request.data\r",
							"var resp_u_salary_1_5_year = jsonData.family.u_salary_1_5_year\r",
							"var req_salary = req.salary\r",
							"\r",
							"pm.test(\"check_u_salary_1_5_year_salary*4\", function () {\r",
							"    pm.expect(resp_u_salary_1_5_year).to.eql(+req_salary*4);\r",
							"});\r",
							"\r",
							"console.log('u_salary_1_5_year =',req_salary*4 )\r",
							"console.log('resp_u_salary_1_5_year =',resp_u_salary_1_5_year )"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "age",
							"value": "33",
							"type": "text"
						},
						{
							"key": "name",
							"value": "Kate",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "1550",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}/user_info_3",
					"host": [
						"{{url}}"
					],
					"path": [
						"user_info_3"
					]
				}
			},
			"response": []
		},
		{
			"name": "object_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//2. Статус код 200\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"//3. Спарсить response body в json.\r",
							"//4. Спарсить request.\r",
							"\r",
							"var jsonData = pm.response.json()\r",
							"var req = request.data\r",
							"\r",
							"var req_url = pm.request.url.query.toObject( )\r",
							"\r",
							"var resp_name = jsonData.name\r",
							"var resp_age = jsonData.age\r",
							"var resp_salary = jsonData.salary\r",
							"\r",
							"console.log('req_url_name = ',req_url.name)\r",
							"console.log('req_url_age = ',req_url.age)\r",
							"console.log('req_url_salary = ',req_url.salary)\r",
							"\r",
							"//5. Проверить, что name в ответе равно name s request (name забрать из request.)\r",
							"\r",
							"pm.test(\"Req_Resp_Name_check\", function () {\r",
							"    pm.expect(resp_name).to.eql(req_url.name);\r",
							"});\r",
							"\r",
							"//6. Проверить, что age в ответе равно age s request (age забрать из request.)\r",
							"\r",
							"pm.test(\"Req_Resp_AGE_check\", function () {\r",
							"    pm.expect(resp_age).to.eql(req_url.age);\r",
							"});\r",
							"\r",
							"//7. Проверить, что salary в ответе равно salary s request (salary забрать из request.)\r",
							"\r",
							"pm.test(\"Req_Resp_SALARY_check\", function () {\r",
							"    pm.expect(resp_salary).to.eql(+req_url.salary);\r",
							"});\r",
							"\r",
							"// 8. Вывести в консоль параметр family из response.\r",
							"var resp_family = jsonData.family\r",
							"console.log(\"resp_family =\",resp_family);\r",
							"\r",
							"//9. Проверить, что у параметра dog есть параметры name.\r",
							"\r",
							"var dog_name = jsonData.family.pets.dog;\r",
							"\r",
							"pm.test(\"Parametr_dog_name_check\", function () {\r",
							"    pm.expect(dog_name).to.have.property('name');\r",
							" });\r",
							"\r",
							"//10. Проверить, что у параметра dog есть параметры age.\r",
							"\r",
							"var dog_age = jsonData.family.pets.dog;\r",
							"\r",
							"pm.test(\"Parametr_dog_age_check\", function () {\r",
							"    pm.expect(dog_age).to.have.property('age');\r",
							" });\r",
							"\r",
							"// 11. Проверить, что параметр name имеет значение Luky.\r",
							"\r",
							" var resp_dog_name = jsonData.family.pets.dog.name;\r",
							"console.log(\"dog_name =\",resp_dog_name);\r",
							"\r",
							"pm.test(\"dog_name_check\", function () {\r",
							"    pm.expect(resp_dog_name).to.eql('Luky');\r",
							" });\r",
							"\r",
							"// 12. Проверить, что параметр age имеет значение 4.\r",
							"\r",
							"var resp_dog_age = jsonData.family.pets.dog.age;\r",
							"console.log(\"dog_age =\",resp_dog_age);\r",
							"\r",
							"pm.test(\"dog_age_check\", function () {\r",
							"    pm.expect(jsonData.family.pets.dog.age).to.eql(4);\r",
							" });\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/object_info_3?name=Kate&age=33&salary=1550",
					"host": [
						"{{url}}"
					],
					"path": [
						"object_info_3"
					],
					"query": [
						{
							"key": "name",
							"value": "Kate"
						},
						{
							"key": "age",
							"value": "33"
						},
						{
							"key": "salary",
							"value": "1550"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "object_info_4",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// 2. Статус код 200\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"//3. Спарсить response body в json.\r",
							"//4. Спарсить request.\r",
							"\r",
							"var jsonData = pm.response.json()\r",
							"var req = request.data\r",
							"\r",
							"var req_url = pm.request.url.query.toObject( )\r",
							"\r",
							"var resp_name = jsonData.name\r",
							"var resp_age = jsonData.age\r",
							"\r",
							"console.log('resp_name = ',resp_name)\r",
							"console.log('resp_age = ',resp_age)\r",
							"\r",
							"\r",
							"//5. Проверить, что name в ответе равно name s request (name забрать из request.)\r",
							"\r",
							"pm.test(\"Req_Resp_Name_check\", function () {\r",
							"    pm.expect(resp_name).to.eql(req_url.name);\r",
							"});\r",
							"\r",
							"\r",
							"//6. Проверить, что age в ответе равно age из request (age забрать из request.)\r",
							"\r",
							"pm.test(\"Req_Resp_AGE_check\", function () {\r",
							"    pm.expect(resp_age).to.eql(+req_url.age);\r",
							"});\r",
							"\r",
							"// 7. Вывести в консоль параметр salary из request.\r",
							"\r",
							"console.log('req_salaru = ',req_url.salary)\r",
							"\r",
							"// 8. Вывести в консоль параметр salary из response.\r",
							"\r",
							"var resp_salary = jsonData.salary\r",
							"console.log('resp_salary = ',resp_salary)\r",
							"\r",
							"// 9. Вывести в консоль 0-й элемент параметра salary из response.\r",
							"\r",
							"var resp_salary_0 = jsonData.salary[0]\r",
							"\r",
							"console.log('resp_salary_0 = ', resp_salary_0)\r",
							"\r",
							"// 10. Вывести в консоль 1-й элемент параметра salary параметр salary из response.\r",
							"\r",
							"var resp_salary_1 = jsonData.salary[1]\r",
							"console.log('resp_salary_1 = ', resp_salary_1)\r",
							"\r",
							"//11. Вывести в консоль 2-й элемент параметра salary параметр salary из response.\r",
							"\r",
							"var resp_salary_2 = jsonData.salary[2]\r",
							"console.log('resp_salary_2 = ', resp_salary_2)\r",
							"\r",
							"// 12. Проверить, что 0-й элемент параметра salary равен salary из request (salary забрать из request.)\r",
							"\r",
							"var req_salary = +pm.request.url.query.get(\"salary\" )\r",
							"var resp_salary_0 = jsonData.salary[0]\r",
							"\r",
							"pm.test(\"Req_Resp_salary_check\", function () {\r",
							"    pm.expect(req_salary).to.eql(resp_salary_0);\r",
							"});\r",
							"\r",
							"// 13. Проверить, что 1-й элемент параметра salary равен salary*2 из request (salary забрать из request.)\r",
							"\r",
							"var req_salary = +pm.request.url.query.get(\"salary\" )\r",
							"var resp_salary_1 = jsonData.salary[1]\r",
							"\r",
							"pm.test(\"Req_Resp_salary_check\", function () {\r",
							"    pm.expect(req_salary*2).to.eql(+resp_salary_1);\r",
							"});\r",
							"\r",
							"// 14. Проверить, что 2-й элемент параметра salary равен salary*3 из request (salary забрать из request.)\r",
							"\r",
							"var req_salary = +pm.request.url.query.get(\"salary\" )\r",
							"var resp_salary_2 = jsonData.salary[2]\r",
							"\r",
							"pm.test(\"Req_Resp_salary_check\", function () {\r",
							"    pm.expect(+resp_salary_2).to.eql(req_salary*3);\r",
							"});\r",
							"\r",
							"// 18 -20 Передать в окружение переменную\r",
							"\r",
							"pm.environment.set(\"name\", jsonData.name);\r",
							"pm.environment.set(\"age\", jsonData.age);\r",
							"pm.environment.set(\"salary\", jsonData.salary[0]);\r",
							"\r",
							"\r",
							"//21. Написать цикл который выведет в консоль по порядку элементы списка из параметра salary.\r",
							"\r",
							"resp_data=pm.response.json()\r",
							"for (i of resp_data.salary){\r",
							"   console.log(i)\r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "{{url}}/object_info_4?name={{name}}&age={{age}}&salary={{salary}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"object_info_4"
					],
					"query": [
						{
							"key": "name",
							"value": "{{name}}"
						},
						{
							"key": "age",
							"value": "{{age}}"
						},
						{
							"key": "salary",
							"value": "{{salary}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "user_info_2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"//Статус код 200\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"//Спарсить response body в json.\r",
							"\r",
							"var jsonData = pm.response.json()\r",
							"\r",
							"//7. Спарсить request.\r",
							"\r",
							"var req = request.data\r",
							"\r",
							"//var req_url = pm.request.url.query.toObject( )\r",
							"\r",
							"//8. Проверить, что json response имеет параметр start_qa_salary\r",
							"\r",
							"\r",
							"pm.test(\"Parametr_start_qa_salary\", function () {\r",
							"    pm.expect(jsonData).to.have.property('start_qa_salary');\r",
							" });\r",
							"\r",
							"//9. Проверить, что json response имеет параметр qa_salary_after_6_months\r",
							"\r",
							"pm.test(\"Parametr_qa_salary_after_6_months\", function () {\r",
							"    pm.expect(jsonData).to.property('qa_salary_after_6_months');\r",
							"});\r",
							"\r",
							"//10. Проверить, что json response имеет параметр qa_salary_after_12_months\r",
							"\r",
							"pm.test(\"Parametr_qa_salary_after_12_months\", function () {\r",
							"    pm.expect(jsonData).to.property('qa_salary_after_12_months');\r",
							"});\r",
							"\r",
							"//11. Проверить, что json response имеет параметр qa_salary_after_1.5_year\r",
							"\r",
							"pm.test(\"Parametr_qa_salary_after_1.5_year\", function () {\r",
							"    pm.expect(jsonData).to.property('qa_salary_after_1.5_year');\r",
							"});\r",
							"\r",
							"//12. Проверить, что json response имеет параметр qa_salary_after_3.5_years\r",
							"\r",
							"pm.test(\"Parametr_qa_salary_after_3.5_years\", function () {\r",
							"    pm.expect(jsonData).to.property('qa_salary_after_3.5_years');\r",
							"});\r",
							"\r",
							"//13. Проверить, что json response имеет параметр person\r",
							"\r",
							"pm.test(\"Parametr_person\", function () {\r",
							"    pm.expect(jsonData).to.property('person');\r",
							"});\r",
							"\r",
							"//14. Проверить, что параметр start_qa_salary равен salary из request (salary забрать из request.)\r",
							"\r",
							"resp_salary=jsonData.start_qa_salary\r",
							"var req_salary = req.salary\r",
							"console.log('req_salary='+req.salary)\r",
							"\r",
							"\r",
							"pm.test(\"check_start_qa_salary\", function () {\r",
							"    pm.expect(resp_salary).to.eql(+req_salary);\r",
							"});\r",
							"\r",
							"//15. Проверить, что параметр qa_salary_after_6_months равен salary*2 из request (salary забрать из request.)\r",
							"\r",
							"resp_salary_6_months=jsonData.qa_salary_after_6_months\r",
							"\r",
							"console.log('qa_salary_after_6_months='+req_salary*2)\r",
							"\r",
							"\r",
							"pm.test(\"check_qa_salary_after_6_months\", function () {\r",
							"    pm.expect(resp_salary_6_months).to.eql(req_salary*2);\r",
							"});\r",
							"\r",
							"//16. Проверить, что параметр qa_salary_after_12_months равен salary*2.7 из request (salary забрать из request.)\r",
							"\r",
							"resp_qa_salary_after_12_months=jsonData.qa_salary_after_12_months\r",
							"console.log('qa_salary_after_12_months='+req_salary*2.7)\r",
							"\r",
							"pm.test(\"check_qa_salary_after_12_months\", function () {\r",
							"    pm.expect(resp_qa_salary_after_12_months).to.eql(req.salary*2.7);\r",
							"});\r",
							"\r",
							"//17. Проверить, что параметр qa_salary_after_1.5_year равен salary*3.3 из request (salary забрать из request.)\r",
							"\r",
							"console.log('qa_salary_after_1.5_year='+req_salary*3.3)\r",
							"\r",
							"pm.test(\"check_qa_salary_after_1.5_year\", function () {\r",
							"    pm.expect(jsonData['qa_salary_after_1.5_year']).to.eql(req_salary*3.3);\r",
							"});\r",
							"\r",
							"//18. Проверить, что параметр qa_salary_after_3.5_years равен salary*3.8 из request (salary забрать из request.)\r",
							"\r",
							"pm.test(\"check_qa_salary_after_3.5_years\", function () {\r",
							"    pm.expect(jsonData['qa_salary_after_3.5_years']).to.eql(req_salary*3.8);\r",
							"});\r",
							"\r",
							"//19. Проверить, что в параметре person, 1-й элемент из u_name равен salary из request (salary забрать из request.)\r",
							"\r",
							"pm.test(\"check_u_name\", function () {\r",
							"    pm.expect(jsonData.person.u_name[1]).to.eql(+req_salary);\r",
							"});\r",
							"\r",
							"//20. Проверить, что что параметр u_age равен age из request (age забрать из request.)\r",
							"var req_age = req.age\r",
							"pm.test(\"check_u_name\", function () {\r",
							"    pm.expect(jsonData.person.u_age).to.eql(+req_age);\r",
							"});\r",
							"\r",
							"//21. Проверить, что параметр u_salary_5_years равен salary*4.2 из request (salary забрать из request.)\r",
							"\r",
							"pm.test(\"check_u_salary_5_years\", function () {\r",
							"    pm.expect(jsonData.person.u_salary_5_years).to.eql(req_salary*4.2);\r",
							"});\r",
							"\r",
							"//22. ***Написать цикл который выведет в консоль по порядку элементы списка из параметра person.\r",
							"\r",
							"jsonData=pm.response.json()\r",
							"\r",
							"for (i in jsonData.person){\r",
							"  console.log(jsonData.person [i])\r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "{{name}}",
							"type": "text"
						},
						{
							"key": "age",
							"value": "{{age}}",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "{{salary}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}/user_info_2",
					"host": [
						"{{url}}"
					],
					"path": [
						"user_info_2"
					]
				}
			},
			"response": []
		}
	]
}